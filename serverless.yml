service: cw-logs-upload

frameworkVersion: '3'

custom:
  version: v1
  stage: ${sls:stage}
  local_mount_path: /mnt/efs
  efs_access_point_arn: ${ssm:/cwlogs/efs/efs_access_point_arn}
  security_group: ${ssm:/cwlogs/vpc/security_group_name}
  subnet_id1: ${ssm:/cwlogs/vpc/subnet_id1}
  subnet_id2: ${ssm:/cwlogs/vpc/subnet_id2}
  subnet_id3: ${ssm:/cwlogs/vpc/subnet_id3}

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-south-1
  profile: personal

  environment:
    stage: ${self:custom.stage}
    BUCKET: ${ssm:/cwlogs/buckets/s3_bucket_arn}

  iam:
    role:
      managedPolicies:
        - arn:aws:iam::aws:policy/AmazonElasticFileSystemClientFullAccess
      statements:
        - Effect: Allow
          Action:
            - logs:FilterLogEvents
          Resource:
            - 'arn:aws:logs:eu-south-1:745049313685:log-group:/aws/lambda/cw-logs-upload-dev-cwLogsWorker:*'
        - Effect: Allow
          Action:
            - s3:PutObject
          Resource:
            - ${ssm:/cwlogs/buckets/s3_bucket_arn}

package:
  patterns:
    - '!.git/**'
    - '!node_modules/**'
    - '!.terraform/**'
    - '!*.tf'

functions:
  cwLogsWorker:
    handler: ./src/workers/cw_logs_worker.handler
    events:
      - schedule: rate(1 day)
    fileSystemConfig:
      localMountPath: ${self:custom.local_mount_path}
      arn: ${self:custom.efs_access_point_arn}
    vpc:
      securityGroupIds:
        - ${self:custom.security_group}
      subnetIds:
        - ${self:custom.subnet_id1}
        - ${self:custom.subnet_id2}
        - ${self:custom.subnet_id3}
